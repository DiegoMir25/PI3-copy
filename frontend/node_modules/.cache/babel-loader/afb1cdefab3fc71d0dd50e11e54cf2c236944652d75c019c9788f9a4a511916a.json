{"ast":null,"code":"// Funciones para interactuar con la API del backend\n// Asegurarse de insertar la ruta correcta del backend en el fetch\n\n// Metodo POST: Manda un conjunto de imagenes al backend y recibe un JSON con los componentes\nexport async function uploadImages(files) {\n  const formData = new FormData();\n  files.forEach(file => formData.append('imagenes', file));\n  const response = await fetch('http://localhost:5000/api/imagenes', {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) throw new Error('Upload failed');\n  return await response.json();\n}","map":{"version":3,"names":["uploadImages","files","formData","FormData","forEach","file","append","response","fetch","method","body","ok","Error","json"],"sources":["C:/Users/diego/OneDrive/Escritorio/Git Projects/PI3-copy/frontend/src/api.js"],"sourcesContent":["// Funciones para interactuar con la API del backend\r\n// Asegurarse de insertar la ruta correcta del backend en el fetch\r\n\r\n// Metodo POST: Manda un conjunto de imagenes al backend y recibe un JSON con los componentes\r\nexport async function uploadImages(files) {\r\n  const formData = new FormData();\r\n  files.forEach(file => formData.append('imagenes', file));\r\n  const response = await fetch('http://localhost:5000/api/imagenes', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  if (!response.ok) throw new Error('Upload failed');\r\n  return await response.json();\r\n}\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA,OAAO,eAAeA,YAAYA,CAACC,KAAK,EAAE;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAIH,QAAQ,CAACI,MAAM,CAAC,UAAU,EAAED,IAAI,CAAC,CAAC;EACxD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IACjEC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAER;EACR,CAAC,CAAC;EACF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClD,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}